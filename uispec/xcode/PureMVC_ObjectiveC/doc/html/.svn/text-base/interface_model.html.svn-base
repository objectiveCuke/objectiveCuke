<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PureMVC Objective-C: Model Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>Model Class Reference</h1><!-- doxytag: class="Model" --><!-- doxytag: inherits="IModel-p" --><code>#import &lt;Model.h&gt;</code>
<p>
Inherits <a class="el" href="protocol_i_model-p.html">IModel-p</a>.
<p>

<p>
<a href="class_model-members.html">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">(id)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interface_model.html#129801d445f684894eb3deb266674c9f">init</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">(void)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interface_model.html#8cdfc34b0a6535fe5472444e41ae7e58">initializeModel</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">(BOOL)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interface_model.html#8717caa4d933ce0f3b8332455d0470ec">hasProxy:</a><code> [implementation]</code></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">(void)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interface_model.html#80afdfa06feb06b83055d53c9860b3a2">registerProxy:</a><code> [implementation]</code></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">(id&lt; <a class="el" href="protocol_i_proxy-p.html">IProxy</a> &gt;)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interface_model.html#b131ca1dcb78c7a0b2289bfda8e13669">removeProxy:</a><code> [implementation]</code></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">(id&lt; <a class="el" href="protocol_i_proxy-p.html">IProxy</a> &gt;)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interface_model.html#c30dd9819e9b6ace7d9d24f36381aab6">retrieveProxy:</a><code> [implementation]</code></td></tr>

<tr><td colspan="2"><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">(id&lt; <a class="el" href="protocol_i_model-p.html">IModel</a> &gt;)&nbsp;</td><td class="memItemRight" valign="bottom">+ <a class="el" href="interface_model.html#fa9a29ce7ed18b0649348da72a747e35">getInstance</a></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
A Singleton <code><a class="el" href="protocol_i_model-p.html">IModel</a></code> implementation.<p>
In PureMVC, the <code><a class="el" href="interface_model.html">Model</a></code> class provides access to model objects (Proxies) by named lookup.<p>
The <code><a class="el" href="interface_model.html">Model</a></code> assumes these responsibilities:<p>
<ul>
<li>
Maintain a cache of <code><a class="el" href="protocol_i_proxy-p.html">IProxy</a></code> instances. </li>
<li>
Provide methods for registering, retrieving, and removing <code><a class="el" href="protocol_i_proxy-p.html">IProxy</a></code> instances. </li>
</ul>
<p>
Your application must register <code><a class="el" href="protocol_i_proxy-p.html">IProxy</a></code> instances with the <code><a class="el" href="interface_model.html">Model</a></code>. Typically, you use an <code><a class="el" href="protocol_i_command-p.html">ICommand</a></code> to create and register <code><a class="el" href="protocol_i_proxy-p.html">IProxy</a></code> instances once the <code><a class="el" href="interface_facade.html">Facade</a></code> has initialized the Core actors.<p>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="interface_proxy.html">Proxy</a>, <a class="el" href="protocol_i_proxy-p.html">IProxy</a> </dd></dl>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="fa9a29ce7ed18b0649348da72a747e35"></a><!-- doxytag: member="Model::getInstance" ref="fa9a29ce7ed18b0649348da72a747e35" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">+ (id&lt; <a class="el" href="protocol_i_model-p.html">IModel</a> &gt;) getInstance           </td>
          <td></td>
          <td class="paramname">          </td>
          <td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<code><a class="el" href="interface_model.html">Model</a></code> Singleton Factory method.<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the Singleton instance </dd></dl>

</div>
</div><p>
<a class="anchor" name="8717caa4d933ce0f3b8332455d0470ec"></a><!-- doxytag: member="Model::hasProxy:" ref="8717caa4d933ce0f3b8332455d0470ec" args="(NSString *proxyName)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (BOOL) hasProxy:           </td>
          <td></td>
          <td class="paramtype">(NSString *)&nbsp;</td>
          <td class="paramname"> <em>proxyName</em>          </td>
          <td>&nbsp;</td>
          <td><code> [implementation]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Check if a <a class="el" href="interface_proxy.html">Proxy</a> is registered<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>proxyName</em>&nbsp;</td><td></td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>whether a <a class="el" href="interface_proxy.html">Proxy</a> is currently registered with the given <code>proxyName</code>. </dd></dl>

<p>Reimplemented from <a class="el" href="protocol_i_model-p.html#1c1a10fd3fb01062ad2239ac247f1b67">&lt; IModel &gt;</a>.</p>

</div>
</div><p>
<a class="anchor" name="129801d445f684894eb3deb266674c9f"></a><!-- doxytag: member="Model::init" ref="129801d445f684894eb3deb266674c9f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (id) init           </td>
          <td></td>
          <td class="paramname">          </td>
          <td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor.<p>
This <code><a class="el" href="protocol_i_model-p.html">IModel</a></code> implementation is a Singleton, so you should not call the constructor directly, but instead call the static Singleton Factory method <code>[<a class="el" href="interface_model.html">Model</a> getInstance]</code><p>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>NSException</em>&nbsp;</td><td>if Singleton instance has already been constructed </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="8cdfc34b0a6535fe5472444e41ae7e58"></a><!-- doxytag: member="Model::initializeModel" ref="8cdfc34b0a6535fe5472444e41ae7e58" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (void) initializeModel           </td>
          <td></td>
          <td class="paramname">          </td>
          <td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Initialize the Singleton <code><a class="el" href="interface_model.html">Model</a></code> instance.<p>
Called automatically by the constructor, this is your opportunity to initialize the Singleton instance in your subclass without overriding the constructor.<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>void </dd></dl>

</div>
</div><p>
<a class="anchor" name="80afdfa06feb06b83055d53c9860b3a2"></a><!-- doxytag: member="Model::registerProxy:" ref="80afdfa06feb06b83055d53c9860b3a2" args="(id&lt; IProxy &gt; proxy)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (void) registerProxy:           </td>
          <td></td>
          <td class="paramtype">(id&lt;<a class="el" href="protocol_i_proxy-p.html">IProxy</a>&gt;)&nbsp;</td>
          <td class="paramname"> <em>proxy</em>          </td>
          <td>&nbsp;</td>
          <td><code> [implementation]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Register an <code><a class="el" href="protocol_i_proxy-p.html">IProxy</a></code> with the <code><a class="el" href="interface_model.html">Model</a></code>.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>proxy</em>&nbsp;</td><td>an <code><a class="el" href="protocol_i_proxy-p.html">IProxy</a></code> to be held by the <code><a class="el" href="interface_model.html">Model</a></code>. </td></tr>
  </table>
</dl>

<p>Reimplemented from <a class="el" href="protocol_i_model-p.html#e2c63879f64bcba5a95f859ebd3413b1">&lt; IModel &gt;</a>.</p>

</div>
</div><p>
<a class="anchor" name="b131ca1dcb78c7a0b2289bfda8e13669"></a><!-- doxytag: member="Model::removeProxy:" ref="b131ca1dcb78c7a0b2289bfda8e13669" args="(NSString *proxyName)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (id&lt; <a class="el" href="protocol_i_proxy-p.html">IProxy</a> &gt;) removeProxy:           </td>
          <td></td>
          <td class="paramtype">(NSString *)&nbsp;</td>
          <td class="paramname"> <em>proxyName</em>          </td>
          <td>&nbsp;</td>
          <td><code> [implementation]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Remove an <code><a class="el" href="protocol_i_proxy-p.html">IProxy</a></code> from the <code><a class="el" href="interface_model.html">Model</a></code>.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>proxyName</em>&nbsp;</td><td>name of the <code><a class="el" href="protocol_i_proxy-p.html">IProxy</a></code> instance to be removed. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the <code><a class="el" href="protocol_i_proxy-p.html">IProxy</a></code> that was removed from the <code><a class="el" href="interface_model.html">Model</a></code> </dd></dl>

<p>Reimplemented from <a class="el" href="protocol_i_model-p.html#78fc8645578ecfb4e565c78de21b134e">&lt; IModel &gt;</a>.</p>

</div>
</div><p>
<a class="anchor" name="c30dd9819e9b6ace7d9d24f36381aab6"></a><!-- doxytag: member="Model::retrieveProxy:" ref="c30dd9819e9b6ace7d9d24f36381aab6" args="(NSString *proxyName)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (id&lt; <a class="el" href="protocol_i_proxy-p.html">IProxy</a> &gt;) retrieveProxy:           </td>
          <td></td>
          <td class="paramtype">(NSString *)&nbsp;</td>
          <td class="paramname"> <em>proxyName</em>          </td>
          <td>&nbsp;</td>
          <td><code> [implementation]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Retrieve an <code><a class="el" href="protocol_i_proxy-p.html">IProxy</a></code> from the <code><a class="el" href="interface_model.html">Model</a></code>.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>proxyName</em>&nbsp;</td><td></td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the <code><a class="el" href="protocol_i_proxy-p.html">IProxy</a></code> instance previously registered with the given <code>proxyName</code>. </dd></dl>

<p>Reimplemented from <a class="el" href="protocol_i_model-p.html#bc093043af899653b9d4321264b2d0c5">&lt; IModel &gt;</a>.</p>

</div>
</div><p>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Wed Dec 24 14:19:08 2008 for PureMVC Objective-C by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.7.1 </small></address>
</body>
</html>
