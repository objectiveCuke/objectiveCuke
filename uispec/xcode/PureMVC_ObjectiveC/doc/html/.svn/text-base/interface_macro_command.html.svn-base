<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>PureMVC Objective-C: MacroCommand Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>MacroCommand Class Reference</h1><!-- doxytag: class="MacroCommand" --><!-- doxytag: inherits="Notifier,ICommand-p" --><code>#import &lt;MacroCommand.h&gt;</code>
<p>
Inherits <a class="el" href="interface_notifier.html">Notifier</a>, and <a class="el" href="protocol_i_command-p.html">ICommand-p</a>.
<p>

<p>
<a href="class_macro_command-members.html">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">(id)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interface_macro_command.html#4c4c333c30ec825a37bc243a5a9f79a9">init</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">(void)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interface_macro_command.html#5c171555ee605d1eb16efb37a2afc5fe">initializeMacroCommand</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">(void)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interface_macro_command.html#06e2cc176ac708466d828f108e2d2362">addSubCommand:</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">(void)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interface_macro_command.html#b7ad23c6cfb6497ab1d7635e45d1c776">execute:</a><code> [implementation]</code></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">(void)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interface_notifier.html#a27a3859998e5334ac577151532a27d8">sendNotification:body:type:</a><code> [implementation]</code></td></tr>

<tr><td colspan="2"><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">(id)&nbsp;</td><td class="memItemRight" valign="bottom">+ <a class="el" href="interface_macro_command.html#fc58c435e2db756252160c4177d9590b">command</a></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
A base <code><a class="el" href="protocol_i_command-p.html">ICommand</a></code> implementation that executes other <code><a class="el" href="protocol_i_command-p.html">ICommand</a></code>s.<p>
A <code><a class="el" href="interface_macro_command.html">MacroCommand</a></code> maintains an list of <code><a class="el" href="protocol_i_command-p.html">ICommand</a></code> Class references called <em>SubCommands</em>.<p>
When <code>execute</code> is called, the <code><a class="el" href="interface_macro_command.html">MacroCommand</a></code> instantiates and calls <code>execute</code> on each of its <em>SubCommands</em> turn. Each <em>SubCommand</em> will be passed a reference to the original <code><a class="el" href="protocol_i_notification-p.html">INotification</a></code> that was passed to the <code><a class="el" href="interface_macro_command.html">MacroCommand</a></code>'s <code>execute</code> method.<p>
Unlike <code><a class="el" href="interface_simple_command.html">SimpleCommand</a></code>, your subclass should not override <code>execute</code>, but instead, should override the <code>initializeMacroCommand</code> method, calling <code>addSubCommand</code> once for each <em>SubCommand</em> to be executed.<p>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="interface_controller.html">Controller</a>, <a class="el" href="interface_notification.html">Notification</a>, <a class="el" href="interface_simple_command.html">SimpleCommand</a> </dd></dl>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="06e2cc176ac708466d828f108e2d2362"></a><!-- doxytag: member="MacroCommand::addSubCommand:" ref="06e2cc176ac708466d828f108e2d2362" args="(Class commandClassRef)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (void) addSubCommand:           </td>
          <td></td>
          <td class="paramtype">(Class)&nbsp;</td>
          <td class="paramname"> <em>commandClassRef</em>          </td>
          <td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Add a <em>SubCommand</em>.<p>
The <em>SubCommands</em> will be called in First In/First Out (FIFO) order.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>commandClassRef</em>&nbsp;</td><td>a reference to the <code>Class</code> of the <code><a class="el" href="protocol_i_command-p.html">ICommand</a></code>. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="fc58c435e2db756252160c4177d9590b"></a><!-- doxytag: member="MacroCommand::command" ref="fc58c435e2db756252160c4177d9590b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">+ (id) command           </td>
          <td></td>
          <td class="paramname">          </td>
          <td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Static Convenience Constructor. 
</div>
</div><p>
<a class="anchor" name="b7ad23c6cfb6497ab1d7635e45d1c776"></a><!-- doxytag: member="MacroCommand::execute:" ref="b7ad23c6cfb6497ab1d7635e45d1c776" args="(id&lt; INotification &gt; notification)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (void) execute:           </td>
          <td></td>
          <td class="paramtype">(id&lt;<a class="el" href="protocol_i_notification-p.html">INotification</a>&gt;)&nbsp;</td>
          <td class="paramname"> <em>notification</em>          </td>
          <td>&nbsp;</td>
          <td><code> [implementation]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Execute this <code><a class="el" href="interface_macro_command.html">MacroCommand</a></code>'s <em>SubCommands</em>.<p>
The <em>SubCommands</em> will be called in First In/First Out (FIFO) order.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>notification</em>&nbsp;</td><td>the <code><a class="el" href="protocol_i_notification-p.html">INotification</a></code> object to be passsed to each <em>SubCommand</em>. </td></tr>
  </table>
</dl>

<p>Reimplemented from <a class="el" href="protocol_i_command-p.html#0e3c0561c29871960030456fd1fd884b">&lt; ICommand &gt;</a>.</p>

</div>
</div><p>
<a class="anchor" name="4c4c333c30ec825a37bc243a5a9f79a9"></a><!-- doxytag: member="MacroCommand::init" ref="4c4c333c30ec825a37bc243a5a9f79a9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (id) init           </td>
          <td></td>
          <td class="paramname">          </td>
          <td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor.<p>
You should not need to define a constructor, instead, override the <code>initializeMacroCommand</code> method.<p>
If your subclass does define a constructor, be sure to call <code>[super init]</code>. 
<p>Reimplemented from <a class="el" href="interface_notifier.html">Notifier</a>.</p>

</div>
</div><p>
<a class="anchor" name="5c171555ee605d1eb16efb37a2afc5fe"></a><!-- doxytag: member="MacroCommand::initializeMacroCommand" ref="5c171555ee605d1eb16efb37a2afc5fe" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (void) initializeMacroCommand           </td>
          <td></td>
          <td class="paramname">          </td>
          <td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Initialize the <code><a class="el" href="interface_macro_command.html">MacroCommand</a></code>.<p>
In your subclass, override this method to initialize the <code><a class="el" href="interface_macro_command.html">MacroCommand</a></code>'s <em>SubCommand</em> list with <code><a class="el" href="protocol_i_command-p.html">ICommand</a></code> class references like this:<p>
<div class="fragment"><pre class="fragment">                <span class="comment">// Initialize MyMacroCommand</span>
                -(void)<a class="code" href="interface_macro_command.html#5c171555ee605d1eb16efb37a2afc5fe">initializeMacroCommand</a> {
                        [<span class="keyword">self</span> addSubCommand:[FirstCommand <span class="keyword">class</span>]];
                        [<span class="keyword">self</span> addSubCommand:[SecondCommand <span class="keyword">class</span>]];
                        [<span class="keyword">self</span> addSubCommand:[ThirdCommand <span class="keyword">class</span>]];
                }
</pre></div><p>
Note that <em>SubCommand</em>s may be any <code><a class="el" href="protocol_i_command-p.html">ICommand</a></code> implementor, <code><a class="el" href="interface_macro_command.html">MacroCommand</a></code>s or <code>SimpleCommands</code> are both acceptable. 
</div>
</div><p>
<a class="anchor" name="a27a3859998e5334ac577151532a27d8"></a><!-- doxytag: member="MacroCommand::sendNotification:body:type:" ref="a27a3859998e5334ac577151532a27d8" args="(NSString *notificationName,[body] id body,[type] NSString *type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (void) sendNotification:           </td>
          <td></td>
          <td class="paramtype">(NSString *)&nbsp;</td>
          <td class="paramname"> <em>notificationName</em></td>
        </tr>
        <tr>
          <td class="paramkey">body:</td>
          <td></td>
          <td class="paramtype">(id)&nbsp;</td>
          <td class="paramname"> <em>body</em></td>
        </tr>
        <tr>
          <td class="paramkey">type:</td>
          <td></td>
          <td class="paramtype">(NSString *)&nbsp;</td>
          <td class="paramname"> <em>type</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td></td><td></td><td><code> [implementation]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Create and send an <code><a class="el" href="protocol_i_notification-p.html">INotification</a></code>.<p>
Keeps us from having to construct new <a class="el" href="protocol_i_notification-p.html">INotification</a> instances in our implementation code. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>notificationName</em>&nbsp;</td><td>the name of the notiification to send </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>body</em>&nbsp;</td><td>the body of the notification </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>type</em>&nbsp;</td><td>the type of the notification </td></tr>
  </table>
</dl>

<p>Reimplemented from <a class="el" href="protocol_i_notifier-p.html#323538759b501f53536fd29b419b0acb">&lt; INotifier &gt;</a>.</p>

</div>
</div><p>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Wed Dec 24 14:19:08 2008 for PureMVC Objective-C by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.7.1 </small></address>
</body>
</html>
